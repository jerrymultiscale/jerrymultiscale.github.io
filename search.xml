<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Markdown Writing]]></title>
      <url>/2017-07-day/Markdown%20Writing/</url>
      <content type="html"><![CDATA[<p>Markdown语法测试<br><a id="more"></a></p>
<h1 id="任务列表"><a href="#任务列表" class="header-anchor"></a>1. <a href="#u4EFB_u52A1_u5217_u8868" class="headerlink" title="任务列表"></a>任务列表</h1><p>在任务项目前面加[]。用[x]表示此项已完成。</p>
<pre><code>- [x] Finish my changes
- [ ] Push my commits to GitHub
- [ ] Open a pull request
</code></pre><ul>
<li>[x] Finish my changes</li>
<li>[ ] Push my commits to GitHub</li>
<li>[ ] Open a pull request</li>
</ul>
<p>注意如果项目内容以（）开始要对（加转义字符\</p>
<pre><code>- [ ] \(Optional) Open a followup issue
</code></pre><ul>
<li>[ ] (Optional) Open a followup issue</li>
</ul>
]]></content>
      
        <categories>
            
            <category> markdown </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[诗词歌赋]]></title>
      <url>/2017-07-day/ShiCiGeFu/</url>
      <content type="html"><![CDATA[<p>落霞与孤鹜齐飞，秋水共长天一色</p>
<p><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500469825/tengwanggexu.jpg" alt=""><br><a id="more"></a></p>
<h1 id="滕王阁序"><a href="#滕王阁序" class="header-anchor"></a>1. <a href="#u300A_u6ED5_u738B_u9601_u5E8F_u300B" class="headerlink" title="《滕王阁序》"></a>《滕王阁序》</h1><p>&emsp;&emsp;南昌（豫章）故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰，台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。<br>　　时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得仙人之旧馆。层台耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，列冈峦之体势。披绣闼，俯雕甍，山原旷其盈视，川泽盱其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰迷津，青雀黄龙之轴。虹销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨；雁阵惊寒，声断衡阳之浦。<br>　　遥襟俯畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。<br>　　天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，指吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人？萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？<br>　　嗟乎！时运不济，命运多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时。所赖君子安贫，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空怀报国之心；阮藉猖狂，岂效穷途之哭！<br>　　勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗懿之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今晨捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？<br>　　鸣呼！胜地不常，盛筵难再。兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙诚，恭疏短引。一言均赋，四韵俱成。请洒潘江，各倾陆海云尔！<br>　<br>　　滕王高阁临江渚，<br>　　佩玉鸣鸾罢歌舞。<br>　　画栋朝飞南浦云，<br>　　珠帘暮卷西山雨。<br>　<br>　　闲云潭影日悠悠，<br>　　物换星移几度秋。<br>　　阁中帝子今何在？<br>　　槛外长江空自流。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Learn Numpy The Hard Way]]></title>
      <url>/2017-07-day/NumPy%20Learn/</url>
      <content type="html"><![CDATA[<p>NumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed<br>一些参考资料：<br><a href="http://scipy-lectures.github.io/intro/numpy/index.html" target="_blank" rel="external">Basics of numpy</a><br><a href="http://scipy-lectures.github.io/intro/numpy/exercises.html" target="_blank" rel="external">Some numpy exercises</a><br><a href="http://scipy-lectures.github.io/advanced/advanced_numpy/" target="_blank" rel="external">Advanced numpy</a><br><a href="http://docs.scipy.org/doc/numpy/reference/" target="_blank" rel="external">Numpy reference</a></p>
<a id="more"></a>
<h1 id="numpy的前世今生"><a href="#numpy的前世今生" class="header-anchor"></a>1. <a href="#Numpy_u7684_u524D_u4E16_u4ECA_u751F" class="headerlink" title="Numpy的前世今生"></a>Numpy的前世今生</h1><p><strong>Numeric</strong>, the ancestor of NumPy, was developed by Jim Hugunin. Another package Numarray was also developed, having some additional functionalities. In 2005, Travis Oliphant created NumPy package by incorporating the features of Numarray into Numeric package. There are many contributors to this open source project.</p>
<h1 id="numpy数值类型"><a href="#numpy数值类型" class="header-anchor"></a>2. <a href="#Numpy_u6570_u503C_u7C7B_u578B" class="headerlink" title="Numpy数值类型"></a>Numpy数值类型</h1><p>NumPy中的基本数据类型</p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">bool</td>
<td style="text-align:left">用一个字节存储的布尔类型（True或False）</td>
</tr>
<tr>
<td style="text-align:left">inti</td>
<td style="text-align:left">由所在平台决定其大小的整数（一般为int32或int64）</td>
</tr>
<tr>
<td style="text-align:left">int8</td>
<td style="text-align:left">一个字节大小，-128 至 127</td>
</tr>
<tr>
<td style="text-align:left">int16</td>
<td style="text-align:left">整数，-32768 至 32767</td>
</tr>
<tr>
<td style="text-align:left">int32</td>
<td style="text-align:left">整数，-2 <strong> 31 至 2 </strong> 32 -1</td>
</tr>
<tr>
<td style="text-align:left">int64</td>
<td style="text-align:left">整数，-2 <strong> 63 至 2 </strong> 63 - 1</td>
</tr>
<tr>
<td style="text-align:left">uint8</td>
<td style="text-align:left">无符号整数，0 至 255</td>
</tr>
<tr>
<td style="text-align:left">uint16</td>
<td style="text-align:left">无符号整数，0 至 65535</td>
</tr>
<tr>
<td style="text-align:left">uint32</td>
<td style="text-align:left">无符号整数，0 至 2 ** 32 - 1</td>
</tr>
<tr>
<td style="text-align:left">uint64</td>
<td style="text-align:left">无符号整数，0 至 2 ** 64 - 1</td>
</tr>
<tr>
<td style="text-align:left">float16</td>
<td style="text-align:left">半精度浮点数：16位，正负号1位，指数5位，精度10位</td>
</tr>
<tr>
<td style="text-align:left">float32</td>
<td style="text-align:left">单精度浮点数：32位，正负号1位，指数8位，精度23位</td>
</tr>
<tr>
<td style="text-align:left">float64或float</td>
<td style="text-align:left">双精度浮点数：64位，正负号1位，指数11位，精度52位</td>
</tr>
<tr>
<td style="text-align:left">complex64</td>
<td style="text-align:left">复数，分别用两个32位浮点数表示实部和虚部</td>
</tr>
<tr>
<td style="text-align:left">complex128或complex</td>
<td style="text-align:left">复数，分别用两个64位浮点数表示实部和虚部</td>
</tr>
</tbody>
</table>
<h1 id="numpy数组的初始化"><a href="#numpy数组的初始化" class="header-anchor"></a>3. <a href="#Numpy_u6570_u7EC4_u7684_u521D_u59CB_u5316" class="headerlink" title="Numpy数组的初始化"></a>Numpy数组的初始化</h1><p>Numpy的主要数据类型是ndarray，即多维数组。它有以下几个属性：<br>ndarray.ndim：数组的维数<br>ndarray.shape：数组每一维的大小<br>ndarray.size：数组中全部元素的数量<br>ndarray.dtype：数组中元素的类型（numpy.int32, numpy.int16, and numpy.float64等）<br>ndarray.itemsize：每个元素占几个字节</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># np.arange初始化数组并reshape</span>

<span class="token comment" spellcheck="true">#生成数组赋特殊值：</span>
np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true"># 由于numpy可以按index取值，所以zeros/ones方法可以用来创建bool数组用于取值</span>
<span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>bool<span class="token punctuation">)</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>bool<span class="token punctuation">)</span>

<span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 随机数，取决于内存情况</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token number">6.89818397e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818397e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817384e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817852e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818483e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817852e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89817384e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818483e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817384e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818483e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818484e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818488e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>
         <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818488e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818484e-310</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token string">'np.arange() （最小值，最大值，步长）（左闭右开） '</span>
<span class="token string">'np.linspace（最小值，最大值，元素数量）'</span>
<span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span>        <span class="token punctuation">,</span>  <span class="token number">0.33069396</span><span class="token punctuation">,</span>  <span class="token number">0.66138793</span><span class="token punctuation">,</span>  <span class="token number">0.99208189</span><span class="token punctuation">,</span>  <span class="token number">1.32277585</span><span class="token punctuation">,</span>
        <span class="token number">1.65346982</span><span class="token punctuation">,</span>  <span class="token number">1.98416378</span><span class="token punctuation">,</span>  <span class="token number">2.31485774</span><span class="token punctuation">,</span>  <span class="token number">2.64555171</span><span class="token punctuation">,</span>  <span class="token number">2.97624567</span><span class="token punctuation">,</span>
        <span class="token number">3.30693964</span><span class="token punctuation">,</span>  <span class="token number">3.6376336</span> <span class="token punctuation">,</span>  <span class="token number">3.96832756</span><span class="token punctuation">,</span>  <span class="token number">4.29902153</span><span class="token punctuation">,</span>  <span class="token number">4.62971549</span><span class="token punctuation">,</span>
        <span class="token number">4.96040945</span><span class="token punctuation">,</span>  <span class="token number">5.29110342</span><span class="token punctuation">,</span>  <span class="token number">5.62179738</span><span class="token punctuation">,</span>  <span class="token number">5.95249134</span><span class="token punctuation">,</span>  <span class="token number">6.28318531</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="numpy-数组的寻址索引和遍历"><a href="#numpy-数组的寻址索引和遍历" class="header-anchor"></a>4. <a href="#Numpy__u6570_u7EC4_u7684_u5BFB_u5740_uFF0C_u7D22_u5F15_u548C_u904D_u5386" class="headerlink" title="Numpy 数组的寻址，索引和遍历"></a>Numpy 数组的寻址，索引和遍历</h1><p>多维数组的访问通过给每一维指定一个索引，顺序是先高维再低维：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">10</span><span class="token operator">*</span>x <span class="token operator">+</span> y
<span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>fromfunction<span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int<span class="token punctuation">)</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>…符号表示将所有未指定索引的维度均赋为：，：表示索引该维度范围所有元素</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> c <span class="token operator">=</span>  np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

       <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>遍历数组的方法可以用循环/迭代器等。如果需要flatten数组然后访问，可以用c.flat做一个迭代器，也可以用c.flatten（）函数将数组先一维展开。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">.</span>flat<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token comment" spellcheck="true">#即可打印所有元素</span>
<span class="token operator">>></span><span class="token operator">></span> c<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span>
       <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux与Windows双系统启动引导恢复]]></title>
      <url>/2017-07-day/Ubuntu_Rescue_Mode_Repair/</url>
      <content type="html"><![CDATA[<p>由grub引导的Linux与Windows共存的双系统环境中，Windows版本更新的时候常会出现grub引导失败，造成系统无法正常启动的问题。这是因为Windows更新的过程中导致MBR损坏导致无法找到/boot/grub部分，无法进一步引导系统。而这种情况下启动界面上会启动<code>grub rescue</code>模式，本文即在此模式下恢复grub引导。<br><a id="more"></a></p>
<h1 id="术语简述"><a href="#术语简述" class="header-anchor"></a>1. <a href="#u672F_u8BED_u7B80_u8FF0" class="headerlink" title="术语简述"></a>术语简述</h1><h2 id="bios"><a href="#bios" class="header-anchor"></a>1.1. <a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h2><p>“Basic Input Output System”，中文名称就是”基本输入输出系统”。其实，它是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、系统设置信息、开机后自检程序和系统自启动程序。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。</p>
<h2 id="mbr"><a href="#mbr" class="header-anchor"></a>1.2. <a href="#MBR" class="headerlink" title="MBR"></a>MBR</h2><p>“Master Boot Record” 硬盘的物理扇区，也叫主引导记录！因为BIOS 很小无法承载启动的运行程序，所以在bios检测到一个硬盘后，将硬盘的0柱面、0磁头、1扇区的内容经过简单判断后， 至内存中的指定位置，然后跳转至这个位置，开始从这个位置运行，大小为512个byte，其中主要存放引导程序和该硬盘的分区表。</p>
<h2 id="grub"><a href="#grub" class="header-anchor"></a>1.3. <a href="#grub" class="headerlink" title="grub"></a>grub</h2><p>“GRand Unified Bootloade” 多重操作系统启动管理器，就是运行这个GRUB之后可以通过它来引导进入其它的系统，包括window以及linux</p>
<p>小结：PC 首先启动到BIOS ，然后检测硬盘的MBR，将MBR这块扇区的内容(也就是写在上面的GRUB)装入内存运行，再通过运行GRUB得到的结果实现新的跳转启动！</p>
<h1 id="出现grub-resuce情况下修复grub2"><a href="#出现grub-resuce情况下修复grub2" class="header-anchor"></a>2. <a href="#u51FA_u73B0grub_resuce_u60C5_u51B5_u4E0B_u4FEE_u590Dgrub2" class="headerlink" title="出现grub resuce情况下修复grub2"></a>出现grub resuce情况下修复grub2</h1><p>grub2分为两部分，一部分写入MBR，另一部分存在linux系统的/boot/grub目录下。出现<code>grub rescue&gt;</code>即MBR部分无法正常运作grub程序，找不到/boot/grub部分，于是启动grub救援模式。</p>
<p>grub rescue命令行有以下可用命令：<br>set, ls, insmod, root, prefix（设置启动路径）</p>
<ol>
<li>ls查看所有分区，列出：<br>（hd0），（hd0，msdos8），（hd0，msdos7），（hd0，msdos6），（hd0，msdos5），（hd0，msdos3），（hd0，msdos1）<br>需要找到ubuntu的安装分区，通过 <code>ls (hd0, msdos4)/boot</code>直到不出现<code>error: unknown filesystem</code></li>
<li>找到之后通过如下命令设置一次性启动参数：<pre class="line-numbers language-bash"><code class="language-bash">grub rescue<span class="token operator">></span>set root<span class="token operator">=</span><span class="token punctuation">(</span>hd0,msdos8<span class="token punctuation">)</span>
grub rescue<span class="token operator">></span>set prefix<span class="token operator">=</span><span class="token punctuation">(</span>hd0,msdos8<span class="token punctuation">)</span>/boot/grub
grub rescue<span class="token operator">></span>insmod /boot/grub/i386-pc/normal.mod
grub resuce<span class="token operator">></span> normal
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
其中<code>/boot/grub/i386-pc/normal.mod</code>路径是在Ubuntu 17.04的系统下的。</li>
<li>如果/boot/grub没有损坏，就能进入Ubuntu系统正常启动界面。If not， 需要手动引导：<br>进入grub命令行：<pre class="line-numbers language-bash"><code class="language-bash">grub<span class="token operator">></span> root <span class="token punctuation">(</span>hd0,4<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">## 指定包含vmlinuz-2.6.18-274.7.1.el5和initrd-2.6.18-274.7.1.el5.img的partition</span>
grub<span class="token operator">></span> kernel /boot/vmlinuz-2.6.18-274.7.1.el5 ro root<span class="token operator">=</span>/dev/sda8 <span class="token comment" spellcheck="true">## root= 是指定包含/sbin/init的partition，即挂载/的partition（以Linux的角度）</span>
grub<span class="token operator">></span> initrd /boot/initrd-2.6.18-274.7.1.el5.img <span class="token comment" spellcheck="true">## 据说这项可以省略</span>
grub<span class="token operator">></span> boot
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
在正确进入了ubuntu之后，需要更新MBR的grub部分来适应新的分区情况：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> update-grub2 <span class="token comment" spellcheck="true"># update /boot/grub/grub.cfg</span>
<span class="token function">sudo</span> grub-install /dev/sda <span class="token comment" spellcheck="true"># install grub into MBR of Mater Disk</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h1 id="livecd-修复方法"><a href="#livecd-修复方法" class="header-anchor"></a>3. <a href="#liveCD__u4FEE_u590D_u65B9_u6CD5" class="headerlink" title="liveCD 修复方法"></a>liveCD 修复方法</h1><p>用启动盘进入try ubuntu界面，手动更新grub</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> update-grub2
<span class="token function">sudo</span> grub-install /dev/sda8
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>参考：</p>
<ol>
<li><a href="http://blog.csdn.net/jscese/article/details/36865449" target="_blank" rel="external">csdn-jscese</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> grub </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Shadowsocks 的搭建]]></title>
      <url>/2017-07-day/Shadowsocks_Configuration/</url>
      <content type="html"><![CDATA[<p>对于做科研、写代码的同学来说，翻<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="external">GFW</a>是必不可少的，对于专业的资料来说，google/sholar搜索的丰富程度可以秒某度的。梯子有很多种，例如改hosts、vpn(SoftEther)、浏览器翻墙的插件(谷歌上网助手)、自由门、GoAgent、cow、Lantern等等。今天我们来介绍一下在国外<a href="https://en.wikipedia.org/wiki/Virtual_private_server" target="_blank" rel="external">VPS</a>(Virtual private server)的搭建，不只是可以用来上google，scholar等，可以说相当于拥有了国外的网络环境，没有限制的浏览国外网站。<br><a id="more"></a></p>
<h1 id="shadowsocks-简介"><a href="#shadowsocks-简介" class="header-anchor"></a>1. <a href="#Shadowsocks__u7B80_u4ECB" class="headerlink" title="Shadowsocks 简介"></a>Shadowsocks 简介</h1><p>维基百科搬运：</p>
<blockquote>
<blockquote>
<p>Shadowsocks (以下简称“ss”) 是一种基于Sock5代理方式的网络资料加密传输工具，分为服务器端和客户端。使用之前，需先将服务器端部署到服务器上面，然后通过客户端连接并建立本地代理。<br>ss的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。在服务器端部署完成后，用户需要按照指定的密码、加密方式和端口使用客户端软件与其连接。在成功连接到服务器后，客户端会在用户的电脑上构建一个本地Socks5代理。浏览网络时，网络流量会被分到本地socks5代理，客户端将其加密之后发送到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。ss的创建者<a href="http://github.com/clowwindy" target="_blank" rel="external">clowwindy</a>是中国人，15年8月22日受到一些外部压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码，</p>
</blockquote>
</blockquote>
<p>详细News请移步<a href="https://zh.wikipedia.org/wiki/Shadowsocks" target="_blank" rel="external">维基百科</a>。</p>
<h1 id="ss-搭建"><a href="#ss-搭建" class="header-anchor"></a>2. <a href="#ss__u642D_u5EFA" class="headerlink" title="ss 搭建"></a>ss 搭建</h1><p>详细的搭建步骤有点琐碎，故分列几条。</p>
<ol>
<li>安装 Shadowsocks</li>
<li>server端配置</li>
<li>Windows客户端配置</li>
<li>Android客户端配置</li>
</ol>
<h2 id="安装-ss"><a href="#安装-ss" class="header-anchor"></a>2.1. <a href="#u5B89_u88C5_ss" class="headerlink" title="安装 ss"></a>安装 ss</h2><p>以Ubuntu 17.04为例。</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update <span class="token comment" spellcheck="true"># 升级下</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-pip
<span class="token function">sudo</span> pip <span class="token function">install</span> shadowsocks <span class="token comment" spellcheck="true"># 安装ss</span>
<span class="token function">sudo</span> apt–get <span class="token function">install</span> python–m2crypto <span class="token comment" spellcheck="true"># 用以支持加密方式</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="server端配置-ss"><a href="#server端配置-ss" class="header-anchor"></a>2.2. <a href="#server_u7AEF_u914D_u7F6E_ss" class="headerlink" title="server端配置 ss"></a>server端配置 ss</h2><h3 id="即时启动"><a href="#即时启动" class="header-anchor"></a>2.2.1. <a href="#u5373_u65F6_u542F_u52A8_uFF1A" class="headerlink" title="即时启动："></a>即时启动：</h3><p><code>sudo ssserver -p 8388 -k password -m rc4-md5 -d start</code></p>
<h3 id="使用配置文件启动"><a href="#使用配置文件启动" class="header-anchor"></a>2.2.2. <a href="#u4F7F_u7528_u914D_u7F6E_u6587_u4EF6_u542F_u52A8_uFF1A" class="headerlink" title="使用配置文件启动："></a>使用配置文件启动：</h3><p>编辑/etc/shadowsocks/config.json文件（如果没有可以创建此文件）</p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
<span class="token property">"server"</span><span class="token operator">:</span><span class="token string">"my_server_ip"</span><span class="token punctuation">,</span>
<span class="token property">"server_port"</span><span class="token operator">:</span><span class="token number">8388</span><span class="token punctuation">,</span>
<span class="token property">"local_address"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>
<span class="token property">"local_port"</span><span class="token operator">:</span><span class="token number">1080</span><span class="token punctuation">,</span>
<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"mypassword"</span><span class="token punctuation">,</span>
<span class="token property">"timeout"</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span>
<span class="token property">"method"</span><span class="token operator">:</span><span class="token string">"rc4-md5"</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>字段含义：</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>含义  </th>
</tr>
</thead>
<tbody>
<tr>
<td>server</td>
<td>服务器 IP (IPv4/IPv6)</td>
</tr>
<tr>
<td>server_port</td>
<td>服务器端口</td>
</tr>
<tr>
<td>local_port</td>
<td>本地端端口</td>
</tr>
<tr>
<td>password</td>
<td>密码</td>
</tr>
<tr>
<td>timeout</td>
<td>超时时间(s)</td>
</tr>
<tr>
<td>method</td>
<td>加密方法， 可选“bf-cfb”, “aes-256-cfb”, “rc4-md5”,等</td>
</tr>
</tbody>
</table>
<blockquote>
<p>加密方式推荐使用rc4-md5，因为 RC4 比 AES 速度快好几倍，如果用在路由器上会带来显著性能提升。旧的 RC4 加密之所以不安全是因为 Shadowsocks 在每个连接上重复使用 key，没有使用 IV。现在已经重新正确实现，可以放心使用。</p>
</blockquote>
<p>config.json文件创建完毕后，赋予755权限<br><code>sudo chmod 755 /etc/shadowsocks/config.json</code><br>使用配置文件，后台运行：<br><code>sudo ssserver -c /etc/shadowsocks/config.json -d start</code></p>
<h3 id="开机启动"><a href="#开机启动" class="header-anchor"></a>2.2.3. <a href="#u5F00_u673A_u542F_u52A8" class="headerlink" title="开机启动"></a>开机启动</h3><p>上述两种方法都是在机器没有重启的情况下用的，每次重启后都手动去开启ss服务有点麻烦，所以设置开机启动可以省点事。<br>创建 /etc/init.d/shadowsocks 文件 <code>sudo vim /etc/init.d/shadowsocks</code><br>添加以下内容：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span>
<span class="token comment" spellcheck="true">### BEGIN INIT INFO</span>
<span class="token comment" spellcheck="true"># Provides:          shadowsocks</span>
<span class="token comment" spellcheck="true"># Required-Start:    $remote_fs $syslog</span>
<span class="token comment" spellcheck="true"># Required-Stop:     $remote_fs $syslog</span>
<span class="token comment" spellcheck="true"># Default-Start:     2 3 4 5</span>
<span class="token comment" spellcheck="true"># Default-Stop:      0 1 6</span>
<span class="token comment" spellcheck="true"># Short-Description: start shadowsocks</span>
<span class="token comment" spellcheck="true"># Description:       start shadowsocks</span>
<span class="token comment" spellcheck="true">### END INIT INFO</span>

start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    ssserver -c /etc/shadowsocks/config.json -d start
<span class="token punctuation">}</span>

stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    ssserver -c /etc/shadowsocks/config.json -d stop
<span class="token punctuation">}</span>

<span class="token keyword">case</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token keyword">in</span>
start<span class="token punctuation">)</span>
    start
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
stop<span class="token punctuation">)</span>
    stop
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
reload<span class="token punctuation">)</span>
     stop
     start
     <span class="token punctuation">;</span><span class="token punctuation">;</span>
*<span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string">"Usage: <span class="token variable">$0</span> {start|reload|stop}"</span>
    <span class="token keyword">exit</span> 1
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
esac
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>增加这个文件的可执行权限 <code>sudo chmod +x /etc/init.d/shadowsocks</code><br>在rc.d中新增<code>sudo update-rc.d shadowsocks defaults</code>，添加到开机启动中<br>以后就可以通过<code>sudo service shadowsocks {start|reload|stop}</code>来管理了。</p>
<h3 id="ss-速度优化"><a href="#ss-速度优化" class="header-anchor"></a>2.2.4. <a href="#ss__u901F_u5EA6_u4F18_u5316" class="headerlink" title="ss 速度优化"></a>ss 速度优化</h3><p>基于kvm架构vps的优化<br>这方面SS给出了非常详尽的优化指南，主要有：优化内核参数，开启TCP Fast Open<br>这里只给出优化内核参数/优化加密方式的方法。更多、更详细的策略方法请参考<a href="https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-optimize" target="_blank" rel="external">shadowsocks optimize</a></p>
<h4 id="内核参数优化"><a href="#内核参数优化" class="header-anchor"></a>2.2.4.1. <a href="#u5185_u6838_u53C2_u6570_u4F18_u5316" class="headerlink" title="内核参数优化"></a>内核参数优化</h4><p>创建 /etc/sysctl.d/local.conf 并写入</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># max open files</span>
fs.file-max <span class="token operator">=</span> 1024000
<span class="token comment" spellcheck="true"># max read buffer</span>
net.core.rmem_max <span class="token operator">=</span> 67108864
<span class="token comment" spellcheck="true"># max write buffer</span>
net.core.wmem_max <span class="token operator">=</span> 67108864
<span class="token comment" spellcheck="true"># default read buffer</span>
net.core.rmem_default <span class="token operator">=</span> 65536
<span class="token comment" spellcheck="true"># default write buffer</span>
net.core.wmem_default <span class="token operator">=</span> 65536
<span class="token comment" spellcheck="true"># max processor input queue</span>
net.core.netdev_max_backlog <span class="token operator">=</span> 4096
<span class="token comment" spellcheck="true"># max backlog</span>
net.core.somaxconn <span class="token operator">=</span> 4096

<span class="token comment" spellcheck="true"># resist SYN flood attacks</span>
net.ipv4.tcp_syncookies <span class="token operator">=</span> 1
<span class="token comment" spellcheck="true"># reuse timewait sockets when safe</span>
net.ipv4.tcp_tw_reuse <span class="token operator">=</span> 1
<span class="token comment" spellcheck="true"># turn off fast timewait sockets recycling</span>
net.ipv4.tcp_tw_recycle <span class="token operator">=</span> 0
<span class="token comment" spellcheck="true"># short FIN timeout</span>
net.ipv4.tcp_fin_timeout <span class="token operator">=</span> 30
<span class="token comment" spellcheck="true"># short keepalive time</span>
net.ipv4.tcp_keepalive_time <span class="token operator">=</span> 1200
<span class="token comment" spellcheck="true"># outbound port range</span>
net.ipv4.ip_local_port_range <span class="token operator">=</span> 10000 65000
<span class="token comment" spellcheck="true"># max SYN backlog</span>
net.ipv4.tcp_max_syn_backlog <span class="token operator">=</span> 4096
<span class="token comment" spellcheck="true"># max timewait sockets held by system simultaneously</span>
net.ipv4.tcp_max_tw_buckets <span class="token operator">=</span> 5000
<span class="token comment" spellcheck="true"># TCP receive buffer</span>
net.ipv4.tcp_rmem <span class="token operator">=</span> 4096 87380 67108864
<span class="token comment" spellcheck="true"># TCP write buffer</span>
net.ipv4.tcp_wmem <span class="token operator">=</span> 4096 65536 67108864
<span class="token comment" spellcheck="true"># turn on path MTU discovery</span>
net.ipv4.tcp_mtu_probing <span class="token operator">=</span> 1

<span class="token comment" spellcheck="true"># for high-latency network</span>
net.ipv4.tcp_congestion_control <span class="token operator">=</span> htcp
<span class="token comment" spellcheck="true"># forward ipv4</span>
net.ipv4.ip_forward <span class="token operator">=</span> 1
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中最后的<code>hybla</code>是为高延迟网络（如美国，欧洲）准备的算法，需要内核支持，测试内核是否支持，在终端输入：<code>sysctl net.ipv4.tcp_available_congestion_control</code><br>如果结果中有<code>hybla</code>，则证明你的内核已开启<code>hybla</code>，如果没有<code>hybla</code>，可以用命令<code>modprobe tcp_hybla</code>开启。</p>
<p>对于低延迟的网络（如日本，香港等），可以使用<code>htcp</code>，可以非常显著的提高速度，首先使用<code>modprobe tcp_htcp</code>开启，再将<code>net.ipv4.tcp_congestion_control = hybla改为net.ipv4.tcp_congestion_control = htcp</code>，建议EC2日本用户使用这个算法。</p>
<p>使配置生效：sysctl –system<br>note: 经过手机Andoid客户端测试, 速度确实有提升（之前手机端速度感觉已经很快了！），YouTube上1080p的高清视频一点不卡，甚至于还没有缓冲到的时间点直接点击在3秒之内都可以缓冲出来（这个时候的即时速度可以到3M/s）。<img src="/images/scenery.jpg"><br>YouTube 1080p高清测试视频，<a href="https://youtu.be/6v2L2UGZJAM" target="_blank" rel="external">Planet Earth: Amazing nature scenery</a></p>
<h4 id="tcp优化"><a href="#tcp优化" class="header-anchor"></a>2.2.4.2. <a href="#TCP_u4F18_u5316" class="headerlink" title="TCP优化"></a>TCP优化</h4><p>1.修改文件句柄数限制<br>如果是ubuntu/centos均可修改/etc/sysctl.d/local.conf<br>找到fs.file-max这一行，修改其值为1024000，并保存退出。然后执行<code>sysctl -p</code>使其生效<br>修改vi /etc/security/limits.conf文件，加入</p>
<pre class="line-numbers language-bash"><code class="language-bash">*               soft    nofile           512000
*               hard    nofile          1024000
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2.修改vi /etc/profile文件，加入<br><code>ulimit -SHn 1024000</code><br>然后重启服务器执行<code>ulimit -n</code>，查询返回1024000即可。</p>
<pre class="line-numbers language-bash"><code class="language-bash">sysctl.conf报错解决方法
修复modprobe的：
<span class="token function">rm</span> -f /sbin/modprobe
<span class="token function">ln</span> -s /bin/true /sbin/modprobe
修复sysctl的：
<span class="token function">rm</span> -f /sbin/sysctl
<span class="token function">ln</span> -s /bin/true /sbin/sysctl
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ss-加密优化"><a href="#ss-加密优化" class="header-anchor"></a>2.2.5. <a href="#ss__u52A0_u5BC6_u4F18_u5316" class="headerlink" title="ss 加密优化"></a>ss 加密优化</h3><ol>
<li>装M2Crypto 这个可以提高SS的加密速度，安装办法：<br>Debian/Ubuntu<br><code>apt-get install python-m2crypto</code><br>安装之后重启SS，速度将会有一定的提升</li>
<li>装 gevent 安装 gevent可以提高 Shadowsocks 的性能。<pre><code>apt-get install python-dev libevent-dev python-setuptools python-gevent easy_install greenlet gevent
</code></pre></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Configuration]]></title>
      <url>/2017-07-day/Hexo%20Configuration/</url>
      <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文为Hexo相关的东西，大部分与特性配置有关。<br><a id="more"></a></p>
<h1 id="特性配置"><a href="#特性配置" class="header-anchor"></a>1. <a href="#u7279_u6027_u914D_u7F6E" class="headerlink" title="特性配置"></a>特性配置</h1><h2 id="添加邮箱链接控制"><a href="#添加邮箱链接控制" class="header-anchor"></a>1.1. <a href="#u6DFB_u52A0_u90AE_u7BB1_u94FE_u63A5_u63A7_u5236" class="headerlink" title="添加邮箱链接控制"></a>添加邮箱链接控制</h2><p>安装插件<code>hexo-email-obfuscate</code>，参考<a href="https://www.npmjs.com/package/hexo-email-obfuscate" target="_blank" rel="external">这里</a></p>
<pre class="line-numbers language-sh"><code class="language-sh">npm install hexo-email-obfuscate --save
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在站点配置文件<code>_config.yml</code>中加入：</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">plugins</span><span class="token punctuation">:</span>
  - hexo-email-obfuscate
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>使用语法：<br>Markdown</p>
<pre><code>[Contact Me](mailto:foo@bar.com)
</code></pre><h2 id="文章中添加居中模块"><a href="#文章中添加居中模块" class="header-anchor"></a>1.2. <a href="#u6587_u7AE0_u4E2D_u6DFB_u52A0_u5C45_u4E2D_u6A21_u5757" class="headerlink" title="文章中添加居中模块"></a>文章中添加居中模块</h2><p>文章Markdown中填写如下：</p>
<pre class="line-numbers language-css"><code class="language-css">&lt;blockquote class=<span class="token string">"blockquote-center"</span>>优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="隐藏网页底部powered-by-hexo-强力驱动"><a href="#隐藏网页底部powered-by-hexo-强力驱动" class="header-anchor"></a>1.3. <a href="#u9690_u85CF_u7F51_u9875_u5E95_u90E8powered_By_Hexo_/__u5F3A_u529B_u9A71_u52A8" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h2><p>打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。</p>
<h2 id="友情链接设置"><a href="#友情链接设置" class="header-anchor"></a>1.4. <a href="#u53CB_u60C5_u94FE_u63A5_u8BBE_u7F6E" class="headerlink" title="友情链接设置"></a>友情链接设置</h2><p>编辑站点的 _config.yml 添加：</p>
<pre><code># title, chinese available
links_title: Links
# links
links:
  MacTalk: http://macshuo.com/
</code></pre><h2 id="代码高亮prism"><a href="#代码高亮prism" class="header-anchor"></a>1.5. <a href="#u4EE3_u7801_u9AD8_u4EAEprism" class="headerlink" title="代码高亮prism"></a>代码高亮prism</h2><p>由<a href="https://github.com/wayou/hexo-prism" target="_blank" rel="external">wayou</a>开发，代替hexo原生代码高亮。</p>
<h3 id="install"><a href="#install" class="header-anchor"></a>1.5.1. <a href="#Install_3A" class="headerlink" title="Install:"></a>Install:</h3><pre class="line-numbers language-sh"><code class="language-sh">npm i -S hexo-prism-plugin
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="usage"><a href="#usage" class="header-anchor"></a>1.5.2. <a href="#Usage_3A" class="headerlink" title="Usage:"></a>Usage:</h3><p>编辑站点配置文件<code>_config.yml</code>，加入</p>
<pre class="line-numbers language-css"><code class="language-css">### prism_plugin
<span class="token property">prism_plugin</span><span class="token punctuation">:</span>
  <span class="token property">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    # realtime or preprocess
  <span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'default'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'coy'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'dark'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'funky'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'okaidia'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'solarizedlight'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>
  #<span class="token property">theme</span><span class="token punctuation">:</span> <span class="token string">'twilight'</span>
  <span class="token property">line_number</span><span class="token punctuation">:</span> true   # default false
  <span class="token property">auto_import_assets</span><span class="token punctuation">:</span> true   # default true
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="代码高亮主题测试"><a href="#代码高亮主题测试" class="header-anchor"></a>1.5.3. <a href="#u4EE3_u7801_u9AD8_u4EAE_u4E3B_u9898_u6D4B_u8BD5" class="headerlink" title="代码高亮主题测试"></a>代码高亮主题测试</h3><p>default:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/default_kglgrh.jpg" alt=""><br>coy:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/coy_vjozcy.jpg" alt=""><br>dark:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/dark_lxldep.jpg" alt=""><br>funky:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/funky_bvxgwk.jpg" alt=""><br>okaidia:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/okaidia_jtwjxz.jpg" alt=""><br>solarizedlight:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/Solariedlight_d6h4xb.jpg" alt=""><br>tomorrow:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/tomorrow_liekgg.jpg" alt=""><br>twilight:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/twilight_wlpsfk.jpg" alt=""><br>note:感觉有些主题怪怪的~~~</p>
<h2 id="文章内插入图片"><a href="#文章内插入图片" class="header-anchor"></a>1.6. <a href="#u6587_u7AE0_u5185_u63D2_u5165_u56FE_u7247" class="headerlink" title="文章内插入图片"></a>文章内插入图片</h2><p>在文章中写入:</p>
<pre class="line-numbers language-json"><code class="language-json">!<span class="token punctuation">[</span><span class="token punctuation">]</span>(/upload_image/<span class="token number">1</span>.jpg<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后进入themes-主题名-source-upload_image目录下(自己创建)，将图片放到这个目录下，就可以了。</p>
<blockquote>
<p>说明：当执行hexo g命令时，会自动把图片复制到 public文件的upload_image目录下。</p>
</blockquote>
<h2 id="鼠标点击小红心的设置"><a href="#鼠标点击小红心的设置" class="header-anchor"></a>1.7. <a href="#u9F20_u6807_u70B9_u51FB_u5C0F_u7EA2_u5FC3_u7684_u8BBE_u7F6E" class="headerlink" title="鼠标点击小红心的设置"></a>鼠标点击小红心的设置</h2><p>将 <a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js" target="_blank" rel="external">love.js</a> 文件添加到 \themes\next\source\js\src 文件目录下。<br>找到 \themes\next\layout_layout.swing 文件， 在文件的后面， 标签之前 添加以下代码：</p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 页面点击小红心 <span class="token operator">--</span><span class="token operator">></span>
<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/src/love.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="header-anchor"></a>1.8. <a href="#u4FEE_u6539_u6587_u7AE0_u5185_u94FE_u63A5_u6587_u672C_u6837_u5F0F" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h2><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>找到文件 themes\next\source\css_custom\custom.styl ，添加如下 css 样式：</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.post-body</span> p a </span><span class="token punctuation">{</span>
  <span class="token selector">color: <span class="token id">#0593d3</span>;
  border-bottom: none;
  &amp;<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#0477ab</span><span class="token punctuation">;</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="设置字体"><a href="#设置字体" class="header-anchor"></a>1.9. <a href="#u8BBE_u7F6E_u5B57_u4F53" class="headerlink" title="设置字体"></a>设置字体</h2><blockquote>
<p>note: 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p>
</blockquote>
<p>为了解决 Google Fonts API 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，NexT 开放了 5 个特定范围的字体设定，他们是：</p>
<ul>
<li>全局字体：定义的字体将在全站范围使用</li>
<li>标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6）</li>
<li>文章字体：文章所使用的字体</li>
<li>Logo字体：Logo 所使用的字体</li>
<li>代码字体： 代码块所使用的字体</li>
</ul>
<p>注意，各项所指定的字体将作为首选字体，当他们不可用时会自动 Fallback 到 NexT 设定的基础字体组：<br>非代码类字体：Fallback 到 “PingFang SC”, “Microsoft YaHei”, sans-serif<br>代码类字体： Fallback 到 consolas, Menlo, “PingFang SC”, “Microsoft YaHei”, monospace<br>另外，每一项都有一个额外的 external 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">font</span><span class="token punctuation">:</span>
  <span class="token property">enable</span><span class="token punctuation">:</span> true

  # 外链字体库地址，例如 //fonts<span class="token number">.</span>googleapis<span class="token number">.</span>com <span class="token punctuation">(</span>默认值<span class="token punctuation">)</span>
  <span class="token property">host</span><span class="token punctuation">:</span> //fonts<span class="token number">.</span>googleapis<span class="token number">.</span>com

  # 全局字体，应用在 body 元素上
  <span class="token property">global</span><span class="token punctuation">:</span>
    <span class="token property">external</span><span class="token punctuation">:</span> true
    <span class="token property">family</span><span class="token punctuation">:</span> Lato

  # 标题字体 <span class="token punctuation">(</span>h<span class="token number">1</span>, h<span class="token number">2</span>, h<span class="token number">3</span>, h<span class="token number">4</span>, h<span class="token number">5</span>, h<span class="token number">6</span><span class="token punctuation">)</span>
  <span class="token property">headings</span><span class="token punctuation">:</span>
    <span class="token property">external</span><span class="token punctuation">:</span> true
    <span class="token property">family</span><span class="token punctuation">:</span> Playball
    <span class="token property">size</span><span class="token punctuation">:</span> <span class="token number">30</span>

  # 文章字体
  <span class="token property">posts</span><span class="token punctuation">:</span>
    <span class="token property">external</span><span class="token punctuation">:</span> true
    <span class="token property">family</span><span class="token punctuation">:</span>

  # Logo 字体
  <span class="token property">logo</span><span class="token punctuation">:</span>
    <span class="token property">external</span><span class="token punctuation">:</span> true
    <span class="token property">family</span><span class="token punctuation">:</span> Playball
    <span class="token property">size</span><span class="token punctuation">:</span> <span class="token number">40</span>

  # 代码字体，应用于 code 以及代码块
  <span class="token property">codes</span><span class="token punctuation">:</span>
    <span class="token property">external</span><span class="token punctuation">:</span> true
    <span class="token property">family</span><span class="token punctuation">:</span> Droid Sans Mono
    <span class="token property">size</span><span class="token punctuation">:</span> <span class="token number">25</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="设置菜单"><a href="#设置菜单" class="header-anchor"></a>1.10. <a href="#u8BBE_u7F6E_u83DC_u5355" class="headerlink" title="设置菜单"></a>设置菜单</h2><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景。参考<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">官方设置菜单配置</a><br>如添加一个新的页面“链接”：</p>
<pre class="line-numbers language-shell"><code class="language-shell">hexo new page Links
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>即在<code>hexo/source/</code>目录下新建了<code>Links</code>目录，目录中包含<code>index.md</code>文件，文件内容：</p>
<pre class="line-numbers language-css"><code class="language-css">---
<span class="token property">title</span><span class="token punctuation">:</span> Links
<span class="token property">date</span><span class="token punctuation">:</span> <span class="token number">2017</span>-<span class="token number">07</span>-<span class="token number">20</span> <span class="token property">10</span><span class="token punctuation">:</span><span class="token property">34</span><span class="token punctuation">:</span><span class="token number">38</span>
---
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后再NexT主题配置文件中的menu项和menu_ico项中加入 Links</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">menu</span><span class="token punctuation">:</span>
  <span class="token property">home</span><span class="token punctuation">:</span> /
  <span class="token property">categories</span><span class="token punctuation">:</span> /categories/
  <span class="token property">archives</span><span class="token punctuation">:</span> /archives/
  <span class="token property">tags</span><span class="token punctuation">:</span> /tags/
  <span class="token property">about</span><span class="token punctuation">:</span> /about/
  <span class="token property">links</span><span class="token punctuation">:</span> /Links/ # <span class="token property">note</span><span class="token punctuation">:</span> links尝试用过<span class="token property">Links</span><span class="token punctuation">:</span> /Links发现会有问题——即使hexo g产生的/hexo/public目录中确实有/links，但是在推送到VPS的时候莫名其妙变成/Links，造成无法访问。
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">menu_icons</span><span class="token punctuation">:</span>
  <span class="token property">enable</span><span class="token punctuation">:</span> true
  #<span class="token property">KeyMapsToMenuItemKey</span><span class="token punctuation">:</span> NameOfTheIconFromFontAwesome
  <span class="token property">home</span><span class="token punctuation">:</span> home
  <span class="token property">about</span><span class="token punctuation">:</span> user
  <span class="token property">categories</span><span class="token punctuation">:</span> th
  <span class="token property">schedule</span><span class="token punctuation">:</span> calendar
  <span class="token property">tags</span><span class="token punctuation">:</span> heart
  <span class="token property">archives</span><span class="token punctuation">:</span> archive
  <span class="token property">links</span><span class="token punctuation">:</span> heart
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最后要修改<code>/themes/next/languages/</code>中对应的语言文件<code>zh-Hans.yml</code>的中links项</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">menu</span><span class="token punctuation">:</span>
  <span class="token property">home</span><span class="token punctuation">:</span> 首页
  <span class="token property">archives</span><span class="token punctuation">:</span> 归档
  <span class="token property">categories</span><span class="token punctuation">:</span> 分类
  <span class="token property">tags</span><span class="token punctuation">:</span> 标签
  <span class="token property">about</span><span class="token punctuation">:</span> 关于
  <span class="token property">search</span><span class="token punctuation">:</span> 搜索
  <span class="token property">schedule</span><span class="token punctuation">:</span> 日程表
  <span class="token property">sitemap</span><span class="token punctuation">:</span> 站点地图
  <span class="token property">commonweal</span><span class="token punctuation">:</span> 公益<span class="token number">404</span>
  <span class="token property">links</span><span class="token punctuation">:</span> 链接
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="添加并美化本地搜索"><a href="#添加并美化本地搜索" class="header-anchor"></a>1.11. <a href="#u6DFB_u52A0_u5E76_u7F8E_u5316_u672C_u5730_u641C_u7D22" class="headerlink" title="添加并美化本地搜索"></a>添加并美化本地搜索</h2><p>NexT 主题内置了本地站内搜索，很方便添加。</p>
<ol>
<li>首先安装<code>hexo-generator-search</code>插件，用于生成博客索引数据<br>在站点的根目录下执行以下命令进行安装：<pre class="line-numbers language-sh"><code class="language-sh">npm install hexo-generator-search --save
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>编辑 站点配置文件<code>_config.yml</code>，新增以下内容到任意位置：</li>
</ol>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">search</span><span class="token punctuation">:</span>
  <span class="token property">path</span><span class="token punctuation">:</span> search<span class="token number">.</span>xml
  <span class="token property">field</span><span class="token punctuation">:</span> post
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>编辑NexT主题配置文件<code>_config.yml</code>，解注释local search:<pre class="line-numbers language-css"><code class="language-css"># Local search
<span class="token property">local_search</span><span class="token punctuation">:</span>
<span class="token property">enable</span><span class="token punctuation">:</span> true
# if auto, trigger search by changing input
# if manual, trigger search by pressing enter key or search button
<span class="token property">path</span><span class="token punctuation">:</span> search<span class="token number">.</span>xml
<span class="token property">fielf</span><span class="token punctuation">:</span> post
<span class="token property">format</span><span class="token punctuation">:</span> html
<span class="token property">limit</span><span class="token punctuation">:</span> <span class="token number">10000</span>
<span class="token property">trigger</span><span class="token punctuation">:</span> auto
# 注意把<span class="token property">trigger</span><span class="token punctuation">:</span> auto打开，可以在输入的同时即时显示搜索结果
# show top n results per article, show all results by setting to -<span class="token number">1</span>
#<span class="token property">top_n_per_article</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="侧边栏头像修饰"><a href="#侧边栏头像修饰" class="header-anchor"></a>1.12. <a href="#u4FA7_u8FB9_u680F_u5934_u50CF_u4FEE_u9970" class="headerlink" title="侧边栏头像修饰"></a>侧边栏头像修饰</h2><p>把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果，参考<a href="odepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/">这里</a>，具体修改文件的位置是<code>hexo\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>中的内容如下:</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.site-author-image</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>
  <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">96</span>px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* start*/</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span>
  <span class="token property">webkit-transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>
  <span class="token property">moz-transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>
  <span class="token property">ms-transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* end */</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">/* start */</span>
<span class="token selector"><span class="token class">.site-author-image</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#55DAE1</span><span class="token punctuation">;</span>
  <span class="token property">webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">/* end */</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="cloudinary-在线图片服务"><a href="#cloudinary-在线图片服务" class="header-anchor"></a>1.13. <a href="#Cloudinary__u5728_u7EBF_u56FE_u7247_u670D_u52A1" class="headerlink" title="Cloudinary 在线图片服务"></a>Cloudinary 在线图片服务</h2><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如Cloudinary提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。<br>在<a href="https://cloudinary.com" target="_blank" rel="external">Cloudinary</a>申请账号，上传图片(注意把upload选项中的unsigned signature选上)</p>
<h2 id="设置文章置顶"><a href="#设置文章置顶" class="header-anchor"></a>1.14. <a href="#u8BBE_u7F6E_u6587_u7AE0_u7F6E_u9876" class="headerlink" title="设置文章置顶"></a>设置文章置顶</h2><blockquote>
<p>note: 参考<a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="external">解决文章置顶</a></p>
</blockquote>
<ol>
<li><p>安装 hexo-generator-index</p>
<pre class="line-numbers language-sh"><code class="language-sh">npm i --save hexo-generator-index
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>将如下的代码加入<code>node_modules/hexo-generator-index/lib/generator.js</code></p>
</li>
</ol>
<pre class="line-numbers language-js"><code class="language-js">posts<span class="token punctuation">.</span>data <span class="token operator">=</span> posts<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 两篇文章top都有定义</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">==</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 若top值一样则按照文章日期降序排</span>
        <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>top <span class="token operator">-</span> a<span class="token punctuation">.</span>top<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 否则按照top值降序排</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 都没定义按照文章日期降序排</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最终的 <code>node_modules/hexo-generator-index/lib/generator.js</code> 代码:</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token string">'use strict'</span><span class="token punctuation">;</span>
var pagination <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hexo-pagination'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>locals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    var config <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">;</span>
    var posts <span class="token operator">=</span> locals<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>index_generator<span class="token punctuation">.</span>order_by<span class="token punctuation">)</span><span class="token punctuation">;</span>
    var paginationDir <span class="token operator">=</span> config<span class="token punctuation">.</span>pagination_dir <span class="token operator">||</span> <span class="token string">'page'</span><span class="token punctuation">;</span>
    posts<span class="token punctuation">.</span>data <span class="token operator">=</span> posts<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 两篇文章top都有定义</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">==</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 若top值一样则按照文章日期降序排</span>
            <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>top <span class="token operator">-</span> a<span class="token punctuation">.</span>top<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 否则按照top值降序排</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 都没定义按照文章日期降序排</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">pagination</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> posts<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        perPage<span class="token operator">:</span> config<span class="token punctuation">.</span>index_generator<span class="token punctuation">.</span>per_page<span class="token punctuation">,</span>
        layout<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">,</span> <span class="token string">'archive'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        format<span class="token operator">:</span> paginationDir <span class="token operator">+</span> <span class="token string">'/%d/'</span><span class="token punctuation">,</span>
        data<span class="token operator">:</span> <span class="token punctuation">{</span>
          __index<span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在文章 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token property">title</span><span class="token punctuation">:</span> Hexo
<span class="token property">date</span><span class="token punctuation">:</span> <span class="token number">2017</span>-<span class="token number">07</span>-<span class="token number">21</span>
<span class="token property">tags</span><span class="token punctuation">:</span> vps
<span class="token property">categories</span><span class="token punctuation">:</span> vps
<span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">3</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="next主题宽度调整"><a href="#next主题宽度调整" class="header-anchor"></a>1.15. <a href="#next_u4E3B_u9898_u5BBD_u5EA6_u8C03_u6574" class="headerlink" title="next主题宽度调整"></a>next主题宽度调整</h2><p>编辑 <code>themes/next/source/css/_variables/custom.styl</code> 文件，新增变量：</p>
<pre class="line-numbers language-css"><code class="language-css">// 修改成你期望的宽度
$content-desktop = <span class="token number">700</span>px
// 当视窗超过 <span class="token number">1600</span>px 后的宽度
$content-desktop-large = <span class="token number">900</span>px
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>以上方法不适用与next.Picses scheme<br><code>Pisces Scheme</code> 编辑<code>themes/next/source/css/_schemes/Picses/_layout.styl</code>文件，更改以下 css 选项定义值：</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.header</span></span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1150</span>px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.container</span> <span class="token class">.main-inner</span> </span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1150</span>px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.content-wrap</span> </span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100%</span> - <span class="token number">260</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="设置disqus"><a href="#设置disqus" class="header-anchor"></a>1.16. <a href="#u8BBE_u7F6Edisqus" class="headerlink" title="设置disqus"></a>设置disqus</h2><blockquote>
<p>note: “多说”评论功能应用广泛，但是据其公司的<a href="http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241" target="_blank" rel="external">声明</a>，多说网已经关闭。</p>
</blockquote>
<p>hexo已经内置了对disqus的支持，配置也很简单</p>
<ol>
<li>首先注册disques账号<br><a href="https://disqus.com" target="_blank" rel="external">https://disqus.com</a> 获取shortname</li>
<li>next主题内置了对disqus的支持，在next主题的_config_xml中搜索disqus，并做如下配置：<pre class="line-numbers language-css"><code class="language-css"># disqus
<span class="token property">disqus</span><span class="token punctuation">:</span>
 <span class="token property">enable</span><span class="token punctuation">:</span> True
 <span class="token property">shortname</span><span class="token punctuation">:</span> jiaxm-me
 <span class="token property">count</span><span class="token punctuation">:</span> true
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="给github添加readme"><a href="#给github添加readme" class="header-anchor"></a>1.17. <a href="#u7ED9github_u6DFB_u52A0README" class="headerlink" title="给github添加README"></a>给github添加README</h2><p>hexo会把md文件都解析成html，但是github的readme只支持MD格式，最简单的方法是让hexo不对README.md做转换。<br>站点配置文件_config_xml中的<code>skip_render:</code>改为<code>skip_render: README.md</code><br>note: README.md放在 hexo/source/目录中即可</p>
<h2 id="markdown里-table-的语法"><a href="#markdown里-table-的语法" class="header-anchor"></a>1.18. <a href="#MarkDown_u91CC_table__u7684_u8BED_u6CD5" class="headerlink" title="MarkDown里 table 的语法"></a>MarkDown里 table 的语法</h2><p>MD的写法</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token operator">|</span> I <span class="token operator">|</span> am <span class="token operator">|</span> table <span class="token operator">|</span>
<span class="token operator">|</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">|</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">:</span><span class="token operator">|</span>
<span class="token operator">|</span>文本内容<span class="token operator">|</span> <span class="token operator">**</span>`是`<span class="token operator">**</span> <span class="token operator">|</span>table<span class="token operator">|</span>
<span class="token operator">|</span>文本内容<span class="token operator">|</span> <span class="token operator">**</span>`是`<span class="token operator">**</span> <span class="token operator">|</span>table<span class="token operator">|</span>
<span class="token operator">|</span>文本内容<span class="token operator">|</span> <span class="token operator">**</span>`是`<span class="token operator">**</span> <span class="token operator">|</span>table<span class="token operator">|</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>表格与上面的文本内容之间<strong>空一行</strong>。否则解析不出来</li>
<li>最上面一行是表格第一列的值。第二行的冒号位置决定表格内文本的对齐方式。有水平居中、水平靠左对齐、水平靠右对齐三种</li>
<li>每列的宽度是根据对应列里最长的文本来决定的</li>
</ol>
<p>输出结果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">我</th>
<th style="text-align:center">是</th>
<th style="text-align:right">展示表格</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">table</td>
</tr>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">table</td>
</tr>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">table</td>
</tr>
</tbody>
</table>
<h2 id="去除b2t-sidebar"><a href="#去除b2t-sidebar" class="header-anchor"></a>1.19. <a href="#u53BB_u9664b2t_sidebar" class="headerlink" title="去除b2t sidebar"></a>去除b2t sidebar</h2><p>找到<code>Hexo/themes/next/layout/_macro/sidebar.swig</code>文件，去掉其中关于b2t的部分：</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token punctuation">{</span><span class="token number">%</span> if theme<span class="token number">.</span>sidebar<span class="token number">.</span>b<span class="token number">2</span>t <span class="token number">%</span><span class="token punctuation">}</span>
  <span class="token selector">&lt;div class="back-to-top">
    &lt;i class="fa fa-arrow-up">&lt;/i>
    </span><span class="token punctuation">{</span><span class="token number">%</span> if theme<span class="token number">.</span>sidebar<span class="token number">.</span>scrollpercent <span class="token number">%</span><span class="token punctuation">}</span>
      <span class="token selector">&lt;span id="scrollpercent">&lt;span>0&lt;/span>%&lt;/span>
    </span><span class="token punctuation">{</span><span class="token number">%</span> endif <span class="token number">%</span><span class="token punctuation">}</span>
  <span class="token selector">&lt;/div>
</span><span class="token punctuation">{</span><span class="token number">%</span> endif <span class="token number">%</span><span class="token punctuation">}</span>
&lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="主题配置参考"><a href="#主题配置参考" class="header-anchor"></a>2. <a href="#u4E3B_u9898_u914D_u7F6E_u53C2_u8003" class="headerlink" title="主题配置参考"></a>主题配置参考</h1><ol>
<li><a href="http://chitanda.me/2015/06/11/tips-for-setup-hexo/" target="_blank" rel="external">markdown table</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> next </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux命令行快捷键]]></title>
      <url>/2017-07-day/Linux_Terminal_Shortcuts/</url>
      <content type="html"><![CDATA[<p>note: 这些快捷键在xshell5环境下适用<br>在shell命令终端中，Ctrl+n相当于方向向下的方向键，Ctrl+p相当于方向向上的方向键。<br>在命令终端中通过它们或者方向键可以实现对历史命令的快速查找。这也是快速输入命令的技巧。<br>在命令终端中可以通过Ctrl+r 实现快速检索使用过的历史命令。Ctrl+r中r是retrieve中r。</p>
<a id="more"></a>
<p>Ctrl+a：光标回到命令行首。 （a：ahead）<br>Ctrl+e：光标回到命令行尾。 （e：end）<br>Ctrl+b：光标向行首移动一个字符。 （b：backwards）<br>Ctrl+ f：光标向行尾移动一个字符。 （f：forwards）<br>Ctrl+w: 删除光标处到行首的字符。<br>Ctrl+k：删除光标处到行尾的字符。<br>Ctrl+u：删除整个命令行文本字符。<br>Ctrl+h：向行首删除一个字符。<br>Ctrl+d：向行尾删除一个字符。<br>Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。<br>Ctrl+p: 上一个使用的历史命令。 （p：previous）<br>Ctrl+n： 下一个使用的历史命令。（n：next ）<br>Ctrl+r：快速检索历史命令。（r：retrieve）。<br>Ctrl+t： 交换光标所在字符和其前的字符。<br>Ctrl+i：相当于Tab键。<br>Ctrl+o：相当于Ctrl+m.<br>Ctrl+m：相当Enter键。<br>其他控制键：<br>Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。<br>Ctrl+q：退出Ctrl+s引起的发呆。<br>Ctrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）<br>Ctrl+c：中断终端中正在执行的任务。<br>Ctrl+d: 在空命令行的情况下可以退出终端。<br>Ctrl+[ ：相当于Esc键。<br>Esc键：连续按3次显示所有的支持的终端命令。<br>Tab键：命令、文件名等自动补全功能。</p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VPS Configuration]]></title>
      <url>/2017-07-day/VPS%20Configuraton/</url>
      <content type="html"><![CDATA[<p>VPS（Virtual Private Server 虚拟专用服务器）技术，将一台服务器分割成多个虚拟专享服务器的优质服务。简单的说，VPS就是一台拥有公网IP的服务器总结一下VPS搭建的过程，从域名的购买到VPS的设置<br><a id="more"></a></p>
<h1 id="vps的配置"><a href="#vps的配置" class="header-anchor"></a>1. <a href="#VPS_u7684_u914D_u7F6E" class="headerlink" title="VPS的配置"></a>VPS的配置</h1><h2 id="vps的购买-tbd"><a href="#vps的购买-tbd" class="header-anchor"></a>1.1. <a href="#VPS_u7684_u8D2D_u4E70_TBD" class="headerlink" title="VPS的购买 TBD"></a>VPS的购买 TBD</h2><h2 id="vps在ubuntu-1704下的软件配置"><a href="#vps在ubuntu-1704下的软件配置" class="header-anchor"></a>1.2. <a href="#VPS_u5728ubuntu_17-04_u4E0B_u7684_u8F6F_u4EF6_u914D_u7F6E" class="headerlink" title="VPS在ubuntu 17.04下的软件配置"></a>VPS在ubuntu 17.04下的软件配置</h2><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> upgrade
$ <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span> git-core
$ curl -sL https://deb.nodesource.com/setup_6.x <span class="token operator">|</span> <span class="token function">sudo</span> -E <span class="token function">bash</span> -
$ <span class="token function">apt-get</span> <span class="token function">install</span> -y nodejs
$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli hexo-server -g
$ <span class="token function">apt-get</span> <span class="token function">install</span> nginx
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第三方服务"><a href="#第三方服务" class="header-anchor"></a>2. <a href="#u7B2C_u4E09_u65B9_u670D_u52A1" class="headerlink" title="第三方服务"></a>第三方服务</h1><h2 id="腾讯企业邮箱"><a href="#腾讯企业邮箱" class="header-anchor"></a>2.1. <a href="#u817E_u8BAF_u4F01_u4E1A_u90AE_u7BB1" class="headerlink" title="腾讯企业邮箱"></a>腾讯企业邮箱</h2><ol>
<li>购买域名</li>
<li>注册腾讯企业邮箱</li>
<li>在域名购买处填写MX记录 （注册腾讯企业邮箱过程中会有提示）</li>
<li>SPF 防止发出的邮件被识别为垃圾邮件。SPF是通过域名的TXT记录来进行设置的。<br>为了提升域名邮箱发送外域（@qq.com以外的邮箱）邮件的成功率，可以给自己的域名设置一条TXT记录来避免这种情况。 TXT记录值为：<code>v=spf1 include:spf.mail.qq.com ~all</code></li>
</ol>
<h2 id="shadowsocks的搭建"><a href="#shadowsocks的搭建" class="header-anchor"></a>2.2. <a href="#Shadowsocks_u7684_u642D_u5EFA" class="headerlink" title="Shadowsocks的搭建"></a>Shadowsocks的搭建</h2><p>见<a href="http://jiaxm.me/2017-07-day/Shadowsocks%20%E6%90%AD%E5%BB%BA/#more" target="_blank" rel="external">站内文章-Shadowsocks搭建</a></p>
]]></content>
      
        <categories>
            
            <category> VPS </category>
            
        </categories>
        
        
        <tags>
            
            <tag> VPS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python3 学习爬虫遇到的一点编码问题]]></title>
      <url>/2017-07-day/python_code/</url>
      <content type="html"><![CDATA[<p>在windows上默认以gbk编码。保存一个文件到本地，会被改成gbk的编码，即使在输出内容在写入到文件前已经做了utf-8的编码，最后还是会被转成gbk编码。<br>本例中就是从糗百上抓的文本，其本身是utf-8编码的。读取的时候encode用gbk，输出用gbk。既然最后一定要用gbk，那前面就不可以用utf-8来encode，否则会报错，i.e.，有些字符找不到对应的编码。<br><a id="more"></a></p>
<h1 id="python3-学习爬虫遇到的一点编码问题"><a href="#python3-学习爬虫遇到的一点编码问题" class="header-anchor"></a>1. <a href="#python3__u5B66_u4E60_u722C_u866B_u9047_u5230_u7684_u4E00_u70B9_u7F16_u7801_u95EE_u9898" class="headerlink" title="python3 学习爬虫遇到的一点编码问题"></a>python3 学习爬虫遇到的一点编码问题</h1><h2 id="上解决代码"><a href="#上解决代码" class="header-anchor"></a>1.1. <a href="#u4E0A_u89E3_u51B3_u4EE3_u7801_uFF1A" class="headerlink" title="上解决代码："></a>上解决代码：</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#coding='utf-8'</span>
<span class="token keyword">import</span> chardet
<span class="token keyword">import</span> requests<span class="token punctuation">,</span> re<span class="token punctuation">,</span> sys
headers <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token string">'User-Agent'</span><span class="token punctuation">:</span> 'Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Macintosh<span class="token punctuation">;</span> Intel Mac OS X 10_11_\
<span class="token number">4</span><span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">52.0</span><span class="token punctuation">.</span><span class="token number">2743.116</span> S\
afari<span class="token operator">/</span><span class="token number">537.36</span>'<span class="token punctuation">}</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.qiushibaike.com"</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
pattern<span class="token operator">=</span>re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'&lt;div class="author.*?&lt;h2>(.*?)&lt;/h2>.*?Icon">(.*?)&lt;/div>.*?&lt;div class="content">.*?&lt;span>(.*?)&lt;/span>.*?&lt;span.*?stats-vote.*?number">(.*?)&lt;/i>.*?stats-comments.*?number">(.*?)&lt;/i>.*?up.*?number hidden">(.*?)&lt;/span>.*?down.*?number hidden">(.*?)&lt;/span>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
items <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
fout <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"qiubai.txt"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> item <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"=========================================\n"</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    age <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    up <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    comment <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    down <span class="token operator">=</span> <span class="token operator">-</span>int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    tot <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>



    s <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token keyword">for</span> l <span class="token keyword">in</span> s<span class="token punctuation">:</span>
        gl <span class="token operator">=</span> l<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">,</span><span class="token string">'ignore'</span><span class="token punctuation">)</span>
        fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token operator">%</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"ID: %s\nAge: %d\n顶: %d\n踩: %d\n评论:%d\n"</span><span class="token operator">%</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> up<span class="token punctuation">,</span> comment<span class="token punctuation">,</span> down<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> 编码 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
