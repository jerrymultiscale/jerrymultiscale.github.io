<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Learn Numpy The Hard Way]]></title>
    <url>%2F2017-07-day%2FNumPy%20Learn%2F</url>
    <content type="text"><![CDATA[NumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed一些参考资料：Basics of numpySome numpy exercisesAdvanced numpyNumpy reference 1. Numpy的前世今生Numeric, the ancestor of NumPy, was developed by Jim Hugunin. Another package Numarray was also developed, having some additional functionalities. In 2005, Travis Oliphant created NumPy package by incorporating the features of Numarray into Numeric package. There are many contributors to this open source project. 2. Numpy数值类型NumPy中的基本数据类型 名称 描述 bool 用一个字节存储的布尔类型（True或False） inti 由所在平台决定其大小的整数（一般为int32或int64） int8 一个字节大小，-128 至 127 int16 整数，-32768 至 32767 int32 整数，-2 31 至 2 32 -1 int64 整数，-2 63 至 2 63 - 1 uint8 无符号整数，0 至 255 uint16 无符号整数，0 至 65535 uint32 无符号整数，0 至 2 ** 32 - 1 uint64 无符号整数，0 至 2 ** 64 - 1 float16 半精度浮点数：16位，正负号1位，指数5位，精度10位 float32 单精度浮点数：32位，正负号1位，指数8位，精度23位 float64或float 双精度浮点数：64位，正负号1位，指数11位，精度52位 complex64 复数，分别用两个32位浮点数表示实部和虚部 complex128或complex 复数，分别用两个64位浮点数表示实部和虚部 3. Numpy数组的初始化Numpy的主要数据类型是ndarray，即多维数组。它有以下几个属性：ndarray.ndim：数组的维数ndarray.shape：数组每一维的大小ndarray.size：数组中全部元素的数量ndarray.dtype：数组中元素的类型（numpy.int32, numpy.int16, and numpy.float64等）ndarray.itemsize：每个元素占几个字节 import numpy as np np.arange(24).reshape(3,8) # np.arange初始化数组并reshape #生成数组赋特殊值： np.zeros(24) np.ones(24) # 由于numpy可以按index取值，所以zeros/ones方法可以用来创建bool数组用于取值 >>> np.ones(24, dtype=bool) array([ True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True], dtype=bool) >>> np.empty(24) # 随机数，取决于内存情况 array([ 6.89818397e-310, 6.89818397e-310, 6.89817518e-310, 6.89817518e-310, 6.89817384e-310, 6.89817852e-310, 6.89818486e-310, 6.89818483e-310, 6.89817852e-310, 6.89817384e-310, 6.89818483e-310, 6.89817384e-310, 6.89818486e-310, 6.89818486e-310, 6.89818483e-310, 6.89817518e-310, 6.89818486e-310, 6.89818484e-310, 6.89817518e-310, 6.89818488e-310, 6.89817518e-310, 6.89818486e-310, 6.89818488e-310, 6.89818484e-310]) 'np.arange() （最小值，最大值，步长）（左闭右开） ' 'np.linspace（最小值，最大值，元素数量）' >>> np.linspace(0, 2*np.pi, 20) array([ 0. , 0.33069396, 0.66138793, 0.99208189, 1.32277585, 1.65346982, 1.98416378, 2.31485774, 2.64555171, 2.97624567, 3.30693964, 3.6376336 , 3.96832756, 4.29902153, 4.62971549, 4.96040945, 5.29110342, 5.62179738, 5.95249134, 6.28318531]) 4. Numpy 数组的寻址，索引和遍历多维数组的访问通过给每一维指定一个索引，顺序是先高维再低维： def f(x, y): return 10*x + y >>> np.fromfunction(f, (5,4), dtype=np.int) array([[ 0, 1, 2, 3], [10, 11, 12, 13], [20, 21, 22, 23], [30, 31, 32, 33], [40, 41, 42, 43]]) >>> b[1:3, :] array([[10, 11, 12, 13], [20, 21, 22, 23]]) …符号表示将所有未指定索引的维度均赋为：，：表示索引该维度范围所有元素 >>> c = np.arange(24).reshape(2,3,4) array([[[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]]) >>> c[1,...] array([[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]) 遍历数组的方法可以用循环/迭代器等。如果需要flatten数组然后访问，可以用c.flat做一个迭代器，也可以用c.flatten（）函数将数组先一维展开。 >>> for i in c.flat: print(i) #即可打印所有元素 >>> c.flatten() array([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23])]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Configuration]]></title>
    <url>%2F2017-07-day%2FHexo%20Configuration%2F</url>
    <content type="text"><![CDATA[Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文为Hexo相关的东西，大部分与特性配置有关。 1. 特性配置1.1. 文章中添加居中模块文章Markdown中填写如下： &lt;blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote> 1.2. 隐藏网页底部powered By Hexo / 强力驱动打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。 1.3. 文章内插入图片在文章中写入: ![](/upload_image/1.jpg) 然后进入themes-主题名-source-upload_image目录下(自己创建)，将图片放到这个目录下，就可以了。 说明：当执行hexo g命令时，会自动把图片复制到 public文件的upload_image目录下。 1.4. 鼠标点击小红心的设置将 love.js 文件添加到 \themes\next\source\js\src 文件目录下。找到 \themes\next\layout_layout.swing 文件， 在文件的后面， 标签之前 添加以下代码： &lt;!-- 页面点击小红心 --> &lt;script type="text/javascript" src="/js/src/love.js">&lt;/script> 1.5. 修改文章内链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。找到文件 themes\next\source\css_custom\custom.styl ，添加如下 css 样式： .post-body p a { color: #0593d3; border-bottom: none; &amp;:hover { color: #0477ab; text-decoration: underline; } } 1.6. 设置字体 note: 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后 为了解决 Google Fonts API 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，NexT 开放了 5 个特定范围的字体设定，他们是： 全局字体：定义的字体将在全站范围使用 标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6） 文章字体：文章所使用的字体 Logo字体：Logo 所使用的字体 代码字体： 代码块所使用的字体 注意，各项所指定的字体将作为首选字体，当他们不可用时会自动 Fallback 到 NexT 设定的基础字体组：非代码类字体：Fallback 到 “PingFang SC”, “Microsoft YaHei”, sans-serif代码类字体： Fallback 到 consolas, Menlo, “PingFang SC”, “Microsoft YaHei”, monospace另外，每一项都有一个额外的 external 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。 font: enable: true # 外链字体库地址，例如 //fonts.googleapis.com (默认值) host: //fonts.googleapis.com # 全局字体，应用在 body 元素上 global: external: true family: Lato # 标题字体 (h1, h2, h3, h4, h5, h6) headings: external: true family: Playball size: 30 # 文章字体 posts: external: true family: # Logo 字体 logo: external: true family: Playball size: 40 # 代码字体，应用于 code 以及代码块 codes: external: true family: Droid Sans Mono size: 25 1.7. 设置菜单菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景。参考官方设置菜单配置如添加一个新的页面“链接”： hexo new page Links 即在hexo/source/目录下新建了Links目录，目录中包含index.md文件，文件内容： --- title: Links date: 2017-07-20 10:34:38 --- 然后再NexT主题配置文件中的menu项和menu_ico项中加入 Links menu: home: / categories: /categories/ archives: /archives/ tags: /tags/ about: /about/ links: /Links/ # note: links尝试用过Links: /Links发现会有问题——即使hexo g产生的/hexo/public目录中确实有/links，但是在推送到VPS的时候莫名其妙变成/Links，造成无法访问。 menu_icons: enable: true #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome home: home about: user categories: th schedule: calendar tags: heart archives: archive links: heart 最后要修改/themes/next/languages/中对应的语言文件zh-Hans.yml的中links项 menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 links: 链接 1.8. 添加并美化本地搜索NexT 主题内置了本地站内搜索，很方便添加。 首先安装hexo-generator-search插件，用于生成博客索引数据在站点的根目录下执行以下命令进行安装：npm install hexo-generator-search --save 编辑 站点配置文件_config.yml，新增以下内容到任意位置： search: path: search.xml field: post 编辑NexT主题配置文件_config.yml，解注释local search:# Local search local_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button path: search.xml fielf: post format: html limit: 10000 trigger: auto # 注意把trigger: auto打开，可以在输入的同时即时显示搜索结果 # show top n results per article, show all results by setting to -1 #top_n_per_article: 1 1.9. 侧边栏头像修饰把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果，参考这里，具体修改文件的位置是hexo\themes\next\source\css\_common\components\sidebar\sidebar-author.styl中的内容如下: .site-author-image { display: block; margin: 0 auto; max-width: 96px; height: auto; border: 2px solid #333; padding: 2px; /* start*/ border-radius: 50% webkit-transition: 1.4s all; moz-transition: 1.4s all; ms-transition: 1.4s all; transition: 1.4s all; /* end */ } /* start */ .site-author-image:hover { background-color: #55DAE1; webkit-transform: rotate(360deg) scale(1.1); moz-transform: rotate(360deg) scale(1.1); ms-transform: rotate(360deg) scale(1.1); transform: rotate(360deg) scale(1.1); } /* end */ 1.10. Cloudinary 在线图片服务除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如Cloudinary提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。在Cloudinary申请账号，上传图片(注意把upload选项中的unsigned signature选上) 1.11. 设置文章置顶 note: 参考解决文章置顶 安装 hexo-generator-index npm i --save hexo-generator-index 将如下的代码加入node_modules/hexo-generator-index/lib/generator.js posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排 }); 最终的 node_modules/hexo-generator-index/lib/generator.js 代码: 'use strict'; var pagination = require('hexo-pagination'); module.exports = function(locals) { var config = this.config; var posts = locals.posts.sort(config.index_generator.order_by); var paginationDir = config.pagination_dir || 'page'; posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排 }); return pagination('', posts, { perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: { __index: true } }); }; 在文章 Front-matter 中添加 top 值，数值越大文章越靠前，如： title: Hexo date: 2017-07-21 tags: vps categories: vps top: 3 1.12. next主题宽度调整编辑 themes/next/source/css/_variables/custom.styl 文件，新增变量： // 修改成你期望的宽度 $content-desktop = 700px // 当视窗超过 1600px 后的宽度 $content-desktop-large = 900px 以上方法不适用与next.Picses schemePisces Scheme 编辑themes/next/source/css/_schemes/Picses/_layout.styl文件，更改以下 css 选项定义值： .header{ width: 1150px; } .container .main-inner { width: 1150px; } .content-wrap { width: calc(100% - 260px); } 1.13. 设置disqus note: “多说”评论功能应用广泛，但是据其公司的声明，多说网已经关闭。 hexo已经内置了对disqus的支持，配置也很简单 首先注册disques账号https://disqus.com 获取shortname next主题内置了对disqus的支持，在next主题的_config_xml中搜索disqus，并做如下配置：# disqus disqus: enable: True shortname: jiaxm-me count: true 1.14. 给github添加READMEhexo会把md文件都解析成html，但是github的readme只支持MD格式，最简单的方法是让hexo不对README.md做转换。站点配置文件_config_xml中的skip_render:改为skip_render: README.mdnote: README.md放在 hexo/source/目录中即可 1.15. MarkDown里 table 的语法MD的写法 | I | am | table | |:-----|:---:|----------:| |文本内容| **`是`** |table| |文本内容| **`是`** |table| |文本内容| **`是`** |table| 表格与上面的文本内容之间空一行。否则解析不出来 最上面一行是表格第一列的值。第二行的冒号位置决定表格内文本的对齐方式。有水平居中、水平靠左对齐、水平靠右对齐三种 每列的宽度是根据对应列里最长的文本来决定的 输出结果： 我 是 展示表格 文本内容 是 table 文本内容 是 table 文本内容 是 table 1.16. 去除b2t sidebar找到Hexo/themes/next/layout/_macro/sidebar.swig文件，去掉其中关于b2t的部分： {% if theme.sidebar.b2t %} &lt;div class="back-to-top"> &lt;i class="fa fa-arrow-up">&lt;/i> {% if theme.sidebar.scrollpercent %} &lt;span id="scrollpercent">&lt;span>0&lt;/span>%&lt;/span> {% endif %} &lt;/div> {% endif %} &lt;/div> 2. 主题配置参考 markdown table]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VPS Configuration]]></title>
    <url>%2F2017-07-day%2FVPS%20Configuraton%2F</url>
    <content type="text"><![CDATA[VPS（Virtual Private Server 虚拟专用服务器）技术，将一台服务器分割成多个虚拟专享服务器的优质服务。简单的说，VPS就是一台拥有公网IP的服务器总结一下VPS搭建的过程，从域名的购买到VPS的设置 1. VPS的配置1.1. VPS的购买 TBD1.2. VPS在ubuntu 17.04下的软件配置$ apt-get update &amp;&amp; apt-get upgrade $ apt-get install git git-core $ curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - $ apt-get install -y nodejs $ npm install hexo-cli hexo-server -g $ apt-get install nginx 2. 第三方服务2.1. 腾讯企业邮箱 购买域名 注册腾讯企业邮箱 在域名购买处填写MX记录 （注册腾讯企业邮箱过程中会有提示） SPF 防止发出的邮件被识别为垃圾邮件。SPF是通过域名的TXT记录来进行设置的。为了提升域名邮箱发送外域（@qq.com以外的邮箱）邮件的成功率，可以给自己的域名设置一条TXT记录来避免这种情况。 TXT记录值为：v=spf1 include:spf.mail.qq.com ~all 2.2. Shadowsocks的搭建见站内文章-Shadowsocks搭建]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>VPS</tag>
      </tags>
  </entry>
</search>